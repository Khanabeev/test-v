name: 'Terraform'

on:
  push:
    branches:
    - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  terraform:
    name: 'Provision GCP'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
    
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Setup gcloud CLI
    - name: setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        # this is the json key of the service account created on the project
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}  
        export_default_credentials: true

    # Generates an execution plan for Terraform
    # - name: Terraform Plan
    #   run: terraform plan

    - name: Terraform Apply
      if: "contains(github.event.commits[0].message, '[construire]')"
      # terraform plan
      run: |
       terraform apply -auto-approve
    - name: Terraform Destroy
      # If any commit message in your push or the HEAD commit of your PR 
      # contains the strings [detruire] -- then terraform Destry step will run
      if: "contains(github.event.commits[0].message, '[detruire]')"
      # terraform plan -destroy
      run: |
       terraform apply -destroy -auto-approve